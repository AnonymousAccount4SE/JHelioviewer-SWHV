<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="HEKSource">
    <property environment="env"/>
    <property name="swhvproject.location" value="/Users/bramb/Documents/OMA/jhelioviewer/git/client/jhv-3d-wcs/" />
    <property name="swhv-swek.location" value="../"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6"/>
    <property name="source" value="1.6"/>
    <property name="heksource.build" value="${basedir}/build" />
    <property name="heksource.bin" value="${basedir}/bin" />
    <property name="heksource.lib" value="${basedir}/lib" />
    <property name="heksource.build.resources" value="${basedir}/build-resources/" />
    <property name="source.name" value="heksource"/>
    <property name="server.lib.location" value="/Users/bramb/Documents/OMA/jhelioviewer/svn/SWHV_repos/trunk/data/server/swek_config/jars/" />
              	
    <!-- These should be set automatically to something that makes sence... -->
    <property name="revision" value="0" />
    <property name="version" value="0"/>

    <path id="swhv-swek.classpath">
        <pathelement location="${swhv-swek.location}/bin"/>
    </path>

    <path id="HEKSource.classpath">
        <pathelement location="bin"/>
        <path refid="swhv-swek.classpath"/>
    </path>

    <target name="init">
        <mkdir dir="${heksource.build}"/>
        <mkdir dir="${heksource.bin}" />
        <copy includeemptydirs="false" todir="${heksource.bin}">
            <fileset dir="src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>

    <target name="omabuild" depends="build">
        <copy todir="${server.lib.location}" file="${heksource.build}/${source.name}.jar"/>
    </target>

    <target name="clean">
        <delete dir="${heksource.bin}"/>
        <delete dir="${heksource.build}"/>
    </target>

    <target depends="clean" name="cleanall">
        <ant antfile="build.xml" dir="${swhv-swek.location}" inheritAll="false" target="clean"/>
    </target>

    <target depends="build-subprojects,build-project,jar-bundle" name="build"/>

    <target name="build-subprojects">
        <!--<ant antfile="build.xml" dir="${swhv-swek.location}" inheritAll="false" target="all"/>-->
    </target>

    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="${heksource.bin}" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="HEKSource.classpath"/>
        </javac>
    </target>

    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>

    <target name="jar-bundle" depends="build-project">
        <!-- JAR File -->
        <jar destfile="${heksource.build}/${source.name}.jar">
            <manifest>
                <attribute name="Class-Path" value="." />
                <attribute name="Implementation-Version" value="v${version}r${revision}" />
                <attribute name="version" value="${version}" />
                <attribute name="revision" value="${revision}" />
            </manifest>
            <fileset dir="${heksource.bin}" />
            <fileset file="README" />
            <fileset file="COPYING" />
            <!--<zipgroupfileset dir="${heksource.lib}" includes="**/*.jar"/>-->
        </jar>
    </target>
</project>

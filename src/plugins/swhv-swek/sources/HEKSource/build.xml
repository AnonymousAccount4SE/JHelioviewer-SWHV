<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<project basedir="." default="all" name="heksource">
    <property environment="env"/>
    <property name="source.name" value="heksource" />
    <property name="swhvproject.location" value="${basedir}/../../../../.." />
    <property name="swhv-swek.location" value="../../"/>
    <property name="swhv-swek.build" value="${swhv-swek.location}/build" />
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6"/>
    <property name="source" value="1.6"/>
    <property name="heksource.build" value="${basedir}/build" />
    <property name="heksource.bin" value="${basedir}/bin" />
    <property name="heksource.lib" value="${basedir}/lib" />
    <property name="heksource.build.resources" value="${basedir}/build-resources/" />
    <property name="heksource.resources" value="${basedir}/resources/" />
    <property name="source.name" value="heksource"/>
    <property name="server.lib.location" value="/Users/bramb/Documents/OMA/jhelioviewer/svn/SWHV_repos/trunk/data/server/swek_config/jars/" />
    <property name="swhv.build" value="${swhvproject.location}/build" />
    <property name="swhv.bin" value="${swhvproject.location}/bin/jhv" />
    <property name="swhv.lib" value="${swhvproject.location}/lib" />
    <property name="swhv-swek.homedir.sources" value="${user.home}/JHelioviewer-SWHV/PluginResources/swek_plugin/sources" />
    <property environment="env"/>
    <path id="lib.path.ref">
        <fileset dir="${env.RT_PATH}" includes="classes.jar"/>
    </path>
    <property name="revision" value="0" />
    <property name="version" value="0"/>

    <path id="swhv-swek.classpath">
        <pathelement location="${swhv-swek.location}/bin"/>
    </path>

    <target name="all" depends="copy-to-root-build" />

    <target name="copy-to-root-build" depends="jar-bundle">
        <copy todir="${swhv.build}">
                <fileset dir="${heksource.build}" />
        </copy>
    </target>

    <target name="init">
        <mkdir dir="${heksource.build}"/>
        <mkdir dir="${heksource.bin}" />
        <copy includeemptydirs="false" todir="${heksource.bin}">
            <fileset dir="src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>

    <target name="omabuild" depends="all">
        <copy todir="${server.lib.location}" file="${heksource.build}/${source.name}.jar"/>
    </target>

    <target name="clean">
        <delete dir="${heksource.bin}"/>
        <delete dir="${heksource.build}"/>
    </target>

    <target name="cleanall" depends="clean" >
        <ant antfile="build.xml" dir="${swhv-swek.location}" inheritAll="false" target="clean"/>
    </target>

    <target name="build-subprojects">
        <!--<ant antfile="build.xml" dir="${swhv-swek.location}" inheritAll="false" target="all"/>-->
    </target>

    <target name="compile" depends="init, bootclasspath.check" if="bootclasspath.exists" >
        <echo message="compile with bootclasspath"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="${heksource.bin}" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <compilerarg value="-Xlint:all"/>
            <compilerarg value="-Xbootclasspath/p:${toString:lib.path.ref}"/>
            <classpath>
                <fileset dir="${swhv-swek.build}">
                    <include name="**/*.jar" />
                </fileset>
                <fileset dir="${swhv.lib}" >
                    <include name="**/*.jar" />
                </fileset>
                <pathelement location="${swhv.bin}" />
            </classpath>
        </javac>
    </target>

    <target name="compile_without" depends="init, bootclasspath.check" unless="bootclasspath.exists" >
        <echo message="compile without bootclasspath"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="${heksource.bin}" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <compilerarg value="-Xlint:all"/>
            <classpath>
                <fileset dir="${swhv-swek.build}">
                    <include name="**/*.jar" />
                </fileset>
                <fileset dir="${swhv.lib}" >
                    <include name="**/*.jar" />
                </fileset>
                <pathelement location="${swhv.bin}" />
            </classpath>
        </javac>
    </target>

    <target name="bootclasspath.check">
        <condition property="bootclasspath.exists">
            <available file="${env.RT_PATH}" type="dir" />
        </condition>
    </target>

    <target name="jar-bundle" depends="compile">
        <!-- JAR File -->
        <jar destfile="${heksource.build}/${source.name}.jar">
            <manifest>
                <attribute name="Class-Path" value="." />
                <attribute name="Implementation-Version" value="v${version}r${revision}" />
                <attribute name="version" value="${version}" />
                <attribute name="revision" value="${revision}" />
            </manifest>
            <fileset dir="${heksource.bin}" />
            <fileset dir="${heksource.resources}" />
            <fileset file="README" />
            <fileset file="COPYING" />
            <!--<zipgroupfileset dir="${swhv-swek.build}" includes="**/*.jar"/>-->
        </jar>
    </target>

    <target name="doc" />

    <target name="bundle-src" />

    <target name="install-source" depends="jar-bundle">
        <copy file="${heksource.build}/${source.name}.jar" todir="${swhv-swek.homedir.sources}" />
    </target>

</project>
